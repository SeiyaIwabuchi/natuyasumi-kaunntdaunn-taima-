{"version":3,"sources":["App.tsx","index.tsx"],"names":["startDateString","endDateString","startDate","Date","getTime","endDate","oldRemain","discordWebhook","localStorage","getItem","console","log","App","nowDate","useState","setNowTime","setTimeAdvanced","setTotalTime","timeRemaining","setTimeRemaining","percentageRemaining","setPercentageRemaining","percentageOfProgress","setPercentageOfProgress","country","area","chartData","setchartData","useEffect","setInterval","nowDate2","fetch","method","headers","body","JSON","stringify","Math","round","then","res","json","catch","err","style","display","justifyContent","Typography","variant","toLocaleDateString","width","data","valueField","argumentField","text","theme","createMuiTheme","palette","type","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","margin","document","getElementById"],"mappings":"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","file":"static/js/main.44aa8fe5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Chart,\n  PieSeries,\n  Title,\n  Legend,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { Typography } from \"@material-ui/core\";\n\nconst startDateString = \"2021/7/22\";\nconst endDateString = \"2021/8/22\";\nconst startDate = new Date(startDateString).getTime();\nconst endDate = new Date(`${endDateString} 23:59:59.999`).getTime();\nlet oldRemain = 0;\nlet discordWebhook = localStorage.getItem(\"discordWebhook\");\nif(discordWebhook === null) console.log(\"discord通知はOFFです。\");\n\nfunction App() {\n  const nowDate = new Date();\n  const [ nowTime, setNowTime ] = useState(nowDate.getTime());\n  const [ timeAdvanced, setTimeAdvanced ] = useState(nowDate.getTime() - startDate);\n  const [ totalTime, setTotalTime ] = useState(endDate - startDate);\n  const [ timeRemaining, setTimeRemaining ] = useState( endDate - startDate - ( nowDate.getTime() - startDate ) );\n  const [ percentageRemaining, setPercentageRemaining ] = useState( (endDate - startDate - ( nowDate.getTime() - startDate )) / (endDate - startDate) );\n  const [ percentageOfProgress, setPercentageOfProgress ] = useState( ( nowDate.getTime() - startDate ) / (endDate - startDate) );\n  const [ chartData, setchartData ] = useState([\n    { country: '経過', area: 0 },\n    { country: '残り', area: 0 },\n  ]);\n  useEffect(() => {\n    setInterval(() => {\n      const nowDate2 = new Date();\n      setNowTime(nowDate2.getTime());\n      setTimeAdvanced(nowDate2.getTime() - startDate);\n      setTotalTime(endDate - startDate);\n      setTimeRemaining(endDate - startDate - ( nowDate2.getTime() - startDate) );\n      setPercentageRemaining((endDate - startDate - ( nowDate2.getTime() - startDate )) / (endDate - startDate));\n      setPercentageOfProgress(( nowDate2.getTime() - startDate ) / (endDate - startDate));\n      setchartData([\n        { country: '経過', area: ( nowDate2.getTime() - startDate ) / (endDate - startDate) },\n        { country: '残り', area: (endDate - startDate - ( nowDate2.getTime() - startDate )) / (endDate - startDate) },\n      ]);\n      if( ( (( nowDate2.getTime() - startDate ) / (endDate - startDate)) - oldRemain) * 100 > 1 && oldRemain < 1){\n        oldRemain = (( nowDate2.getTime() - startDate ) / (endDate - startDate));\n        if(discordWebhook !== null){\n          fetch(discordWebhook,\n            {\n              method:\"post\",\n              headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n              body: JSON.stringify({\n                \"content\": `夏休みが1%経過しました。\\r現在${\n                  Math.round( ( nowDate2.getTime() - startDate ) * 100 * 1000 / (endDate - startDate) ) / 1000\n                }%で、残り${\n                  Math.round((endDate - startDate - ( nowDate2.getTime() - startDate )) * 100 * 1000 / (endDate - startDate)) / 1000\n                }%です。`\n              })\n            }\n          )\n          .then(res => res.json())\n          .then(res => console.log(res))\n          .catch(err => console.log(err))\n        }\n      }\n    } ,100);\n  },[]);\n  return (\n    <div style={{display:\"flex\",justifyContent:'space-around'}}>\n      <div>\n        {/* <p>\n          ここに表示したいもの\n          - 今日の日時（秒まで）\n          - 夏休みの終わり日時（秒まで）\n          - 夏休みの進捗パーセント（ミリ秒換算で残りと進み）\n            - 残り：残り時間 / 全体の時間\n            - 進み : 進んだ時間 / 全体の時間\n            - 全体の時間 : 夏休みの終了日時ー開始日時\n            - 進んだ時間 : 現在の日時 - 夏休み開始日時\n            - 残り時間 : 全体の時間 - 進んだ時間\n        </p> */}\n        {/* <Typography>{nowTime}</Typography>\n        <Typography>{startDate}</Typography>\n        <Typography>{endDate}</Typography>\n        <Typography>{timeAdvanced}</Typography>\n        <Typography>{totalTime}</Typography>\n        <Typography>{timeRemaining}</Typography> */}\n        <Typography variant=\"h4\">{`開始日${startDateString}`}</Typography>\n        <Typography variant=\"h4\">{`終了日${endDateString}`}</Typography>\n        <Typography variant=\"h4\">{`今日の日付：${new Date().toLocaleDateString()}`}</Typography>\n        <Typography variant=\"h4\">{`残り：${Math.round(percentageRemaining * 100 * 100000) / 100000}%`}</Typography>\n        <Typography variant=\"h4\">{`経過：${Math.round(percentageOfProgress * 100 * 100000) / 100000}%`}</Typography>\n        <Typography variant=\"h4\">{`残りの日数 : ${Math.round(timeRemaining / 1000 / 60 / 60 / 24)}日`}</Typography>\n        <Typography variant=\"h4\">{`残りの時間数 : ${Math.round(timeRemaining / 1000 / 60 / 60)}時間`}</Typography>\n        <Typography variant=\"h4\">{`残りの分数 : ${Math.round(timeRemaining / 1000 / 60)}分`}</Typography>\n        <Typography variant=\"h4\">{`残りの秒数 : ${Math.round(timeRemaining / 1000)}秒`}</Typography>\n        {/* <Typography>{`old : ${oldRemain}`}</Typography> */}\n        {\n          discordWebhook === null\n          ? <Typography>\n            localStorageにdiscordWebhookというキーで<br />\n            discordのwebhookのURLを設定すると1%毎に通知が送られます。<br />\n            うるさいので使わないことをお勧めします。\n            </Typography>\n          : <Typography>discord通知はONです。</Typography>\n        }\n      </div>\n      <div style={{width:\"45%\"}}>\n        <Chart\n            data={chartData}\n          >\n            <PieSeries\n              valueField=\"area\"\n              argumentField=\"country\"\n            />\n            <Legend />\n            <Title\n              text=\"経過と残り\"\n            />\n          </Chart>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n    },\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div style={{margin:\"10px\"}}>\n          <App />\n        </div>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}